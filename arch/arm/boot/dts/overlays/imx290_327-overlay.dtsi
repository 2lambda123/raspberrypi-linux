// SPDX-License-Identifier: GPL-2.0-only
// Partial definitions for IMX290 or IMX327 camera module on VC I2C bus
// The compatible string should be set in an overlay that then includes this one
/dts-v1/;
/plugin/;

#include <dt-bindings/gpio/gpio.h>

/{
	compatible = "brcm,bcm2835";

	fragment@0 {
		target = <&imx290_0>;
		__overlay__ {
			data-lanes = <1 2>;
			link-frequencies =
				/bits/ 64 <445500000 297000000>;
		};
	};

	fragment@1 {
		target = <&imx290_0>;
		__dormant__ {
			data-lanes = <1 2 3 4>;
			link-frequencies =
				/bits/ 64 <222750000 148500000>;
		};
	};

	fragment@2 {
		target = <&i2cbus>;
		__overlay__ {
			#address-cells = <1>;
			#size-cells = <0>;
			status = "okay";

			imx290: imx290@1a {
				reg = <0x1a>;
				status = "okay";

				clocks = <&imx290_clk>;
				clock-names = "xclk";
				clock-frequency = <37125000>;

				vdda-supply = <&cam_reg>;	/* 2.8v */
				vdddo-supply = <&imx290_vdddo>;	/* 1.8v */
				vddd-supply = <&imx290_vddd>;	/* 1.5v */

				port {
					imx290_0: endpoint {
						remote-endpoint = <&csi_ep>;
						clock-lanes = <0>;
					};
				};
			};
		};
	};

	fragment@3 {
		target = <&csi_ep>;
		__overlay__ {
			data-lanes = <1 2>;
		};
	};

	fragment@4 {
		target = <&csi_ep>;
		__dormant__ {
			data-lanes = <1 2 3 4>;
		};
	};

	fragment@5 {
		target = <&csi>;
		__overlay__ {
			status = "okay";

			port {
				csi_ep: endpoint {
					remote-endpoint = <&imx290_0>;
				};
			};
		};
	};

	fragment@6 {
		target = <&i2c0if>;
		__overlay__ {
			status = "okay";
		};
	};

	fragment@7 {
		target-path="/";
		__overlay__ {
			imx290_vdddo: imx290_1_vddo {
				compatible = "regulator-fixed";
				regulator-name = "imx290_1_vdddo";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <1800000>;
			};
			imx290_vddd: imx290_1_vddd {
				compatible = "regulator-fixed";
				regulator-name = "imx290_1_vddd";
				regulator-min-microvolt = <1500000>;
				regulator-max-microvolt = <1500000>;
			};

			imx290_clk: imx290_1_clk {
				compatible = "fixed-clock";
				#clock-cells = <0>;
				clock-frequency = <37125000>;
				clock-output-names = "imx290_1_clk";
			};
		};
	};

	fragment@8 {
		target = <&i2c0mux>;
		__overlay__ {
			status = "okay";
		};
	};

	fragment@9 {
		target = <&cam_reg>;
		__overlay__ {
			status = "okay";
			regulator-name = "imx290_1_vdda";
			regulator-min-microvolt = <2800000>;
			regulator-max-microvolt = <2800000>;
		};
	};

	frag100: fragment@100 {
		target = <&i2c_csi_dsi>;
		i2cbus: __overlay__ {
			status = "okay";
		};
	};

	frag101: fragment@101 {
		target = <&csi1>;
		csi: __overlay__ {
			status = "okay";
		};
	};

	frag102: fragment@102 {
		target = <&cam1_reg>;
		cam_reg: __overlay__ {
			status = "okay";
		};
	};


	__overrides__ {
		4lane = <0>, "-0+1-3+4";
		clock-frequency = <&imx290_clk>,"clock-frequency:0",
				  <&imx290>,"clock-frequency:0";
		cam0 =	<&frag100>, "target:0=",<&i2c_vc>,
			<&frag101>, "target:0=",<&csi0>,
			<&frag102>, "target:0=",<&cam0_reg>,
			<&imx290_vdddo>, "name=imx290_0_dovdd",
			<&imx290_vdddo>, "regulator-name=imx290_0_dovdd",
			<&imx290_vddd>, "name=imx290_0_dvdd",
			<&imx290_vddd>, "regulator-name=imx290_0_dvdd",
			<&imx290_clk>, "clock-output-names=imx290_0_clk",
			<&imx290_clk>, "name=imx290_0_clk"
			;
	};
};
